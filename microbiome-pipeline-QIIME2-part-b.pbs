#!/bin/sh
### Job name
#PBS -N chris_microbiome_QIIME2_analysis_part-b
### Declare job non-rerunable
#PBS -r n
#PBS -k oe

################Change This For Different Queue#####################
#PBS -q stdq1
###PBS -q medq1
####################################################################

### Wall time required. This example is 48 hours
#PBS -l walltime=96:00:00

### Number of nodes 
### The following means 1 nodes required. Processor Per Node=20, 
### ppn (Processor Per Node) can be any number up to 20.
###PBS -l nodes=2:ppn=20

#########REMEMBER TO CHANGE THE THREAD NUMBER ACCORDING TO THE CHOSEN NODE#################
###PBS -l nodes=1:ppn=40
#PBS -l select=1:ncpus=40:mem=755gb
###########################################################################################

#The following stuff will be executed in the first allocated node.
#Please don't modify it

PATH=$PBS_O_PATH
cd $PBS_O_WORKDIR
# Define number of processors
NPROCS=`wc -l < $PBS_NODEFILE`
NNODES=`uniq $PBS_NODEFILE | wc -l`
NCORES=$((NPROCS / NNODES))

JID=`echo ${PBS_JOBID}| sed "s/.hpc2015-mgt.hku.hk//"`
echo Job ID : ${JID}
echo ${NPROCS} CPUs allocated: `cat $PBS_NODEFILE` 1>&2
echo This PBS script is running on host `hostname` 1>&2
echo Working directory is $PBS_O_WORKDIR  1>&2

echo ============== ${PBS_JOBNAME} : ${NPROCS} CPUs ====================
echo "Job Start Time is `date "+%Y/%m/%d -- %H:%M:%S"`"

##############################################################################################################################################################


###QIIME2 Analysis Part b
###NEED METADATA HERE

#SRA accession
SRA="meta-analysis-3"
barcode_metadata="../metadata_metaanalysis.tsv"
threads="40"

module load anaconda3/2021.05

cd /home/d24h_prog2/chris/data/microbiome_mosq/
#mkdir $SRA
cd $SRA

source activate qiime2-2021.8

###to deal with QIIME2 [Errno 28] No space left on device: https://forum.qiime2.org/t/no-space-left-on-device-classifier-tmpdir/2768/3
export TMPDIR='/home/d24h_prog2/chris/data/microbiome_mosq/TMPDIR'
echo ${TMPDIR}
echo ${threads}

##Denoising QC with dada2 <-- to remove noisy reads (poor quality), improving the quality of the data
####manually look at demux-full.qzv at https://view.qiime2.org/ to determine trim and truncate length
trimf="0"
trimr="0"
truncf="260"
truncr="220"

#This method denoises paired-end sequences, dereplicates them, and filters chimeras.
qiime dada2 denoise-paired \
  --i-demultiplexed-seqs demux-paired-end.qza\
  --p-trim-left-f ${trimf} \
  --p-trim-left-r ${trimr} \
  --p-trunc-len-f ${truncf} \
  --p-trunc-len-r ${truncr} \
  --p-n-threads ${threads} \
  --o-table table.qza \
  --o-representative-sequences rep-seqs.qza \
  --o-denoising-stats denoising-stats.qza

#Feature table summary
###make metadata file in tsv format: i.e. barcode_metadata.tsv

#Generate visual and tabular summaries of a feature table.
qiime feature-table summarize \
  --i-table table.qza \
  --o-visualization table.qzv \
  --m-sample-metadata-file ${barcode_metadata} #straub_2020_metadata.tsv --> straub2020_metadata.tsv ###need metadata file here

#Generate tabular view of feature identifier to sequence mapping, including links to BLAST each sequence against the NCBI nt database.
qiime feature-table tabulate-seqs \
  --i-data rep-seqs.qza \
  --o-visualization rep-seqs.qzv

#Generate a tabular view of Metadata. The output visualization supports interactive filtering, sorting, and exporting to common file formats.
qiime metadata tabulate \
  --m-input-file denoising-stats.qza \
  --o-visualization denoising-stats.qzv


#Alignment for comparisons
#This pipeline will start by creating a sequence alignment using MAFFT,
#  after which any alignment columns that are phylogenetically uninformative
#  or ambiguously aligned will be removed (masked). The resulting masked
#  alignment will be used to infer a phylogenetic tree and then subsequently
#  rooted at its midpoint. Output files from each step of the pipeline will
#  be saved. This includes both the unmasked and masked MAFFT alignment from
#  q2-alignment methods, and both the rooted and unrooted phylogenies from
#  q2-phylogeny methods.
qiime phylogeny align-to-tree-mafft-fasttree \
  --i-sequences rep-seqs.qza \
  --p-n-threads ${threads} \
  --o-alignment aligned-rep-seqs.qza \
  --o-masked-alignment masked-aligned-rep-seqs.qza \
  --o-tree unrooted-tree.qza \
  --o-rooted-tree rooted-tree.qza


#Taxonomic analysis
wget \
  -O "gg-13-8-99-515-806-nb-classifier.qza" \
  https://data.qiime2.org/2021.8/common/gg-13-8-99-515-806-nb-classifier.qza
#^just need to download once

#Classify reads by taxon using a fitted classifier.
qiime feature-classifier classify-sklearn \
  --i-classifier gg-13-8-99-515-806-nb-classifier.qza \
  --i-reads rep-seqs.qza \
  --o-classification taxonomy.qza

#Generate a tabular view of Metadata. The output visualization supports interactive filtering, sorting, and exporting to common file formats.
qiime metadata tabulate \
  --m-input-file taxonomy.qza \
  --o-visualization taxonomy.qzv

#This visualizer produces an interactive barplot visualization of
#  taxonomies. Interactive features include multi-level sorting, plot
#  recoloring, sample relabeling, and SVG figure export.
qiime taxa barplot \
  --i-table table.qza \
  --i-taxonomy taxonomy.qza \
  --m-metadata-file ${barcode_metadata} \
  --o-visualization taxa-bar-plots.qzv

##############################################################################################################################################################

echo "Job Finish Time is `date "+%Y/%m/%d -- %H:%M:%S"`"

mv ~/*${PBS_JOBNAME}* /home/d24h_prog2/chris/logs/

exit 0
